{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/categories/categories/categories.component.css","webpack:///./src/app/categories/categories/categories.component.html","webpack:///./src/app/categories/categories/categories.component.ts","webpack:///./src/app/categories/manage-categories/manage-categories.component.css","webpack:///./src/app/categories/manage-categories/manage-categories.component.html","webpack:///./src/app/categories/manage-categories/manage-categories.component.ts","webpack:///./src/app/categories/posts-by-category/posts-by-category.component.css","webpack:///./src/app/categories/posts-by-category/posts-by-category.component.html","webpack:///./src/app/categories/posts-by-category/posts-by-category.component.ts","webpack:///./src/app/category.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/posts/create-post/create-post.component.css","webpack:///./src/app/posts/create-post/create-post.component.html","webpack:///./src/app/posts/create-post/create-post.component.ts","webpack:///./src/app/posts/manage-posts/manage-posts.component.css","webpack:///./src/app/posts/manage-posts/manage-posts.component.html","webpack:///./src/app/posts/manage-posts/manage-posts.component.ts","webpack:///./src/app/posts/post/post.component.css","webpack:///./src/app/posts/post/post.component.html","webpack:///./src/app/posts/post/post.component.ts","webpack:///./src/app/posts/posts/posts.component.css","webpack:///./src/app/posts/posts/posts.component.html","webpack:///./src/app/posts/posts/posts.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"footer{\\r\\n    margin-top: 100px;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<br>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <br>\\n  <router-outlet></router-outlet>\\n\\n  <footer>\\n      <hr>\\n      <p> voltraaBlog &copy; 2018</p>\\n    </footer>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Voltraa Blog';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { CKEditorModule } from 'ngx-ckeditor';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { ValidateService } from './validate.service';\nimport { AuthService } from './auth.service';\nimport { PostService } from './post.service';\nimport { CategoryService } from './category.service';\n\nimport { AuthGuard } from './auth-guard.service';\n\nimport { CreatePostComponent } from './posts/create-post/create-post.component';\nimport { PostsComponent } from './posts/posts/posts.component';\n\nimport { CategoriesComponent } from './categories/categories/categories.component';\nimport { ManageCategoriesComponent } from './categories/manage-categories/manage-categories.component';\nimport { PostsByCategoryComponent } from './categories/posts-by-category/posts-by-category.component';\nimport { PostComponent } from './posts/post/post.component';\nimport { ManagePostsComponent } from './posts/manage-posts/manage-posts.component';\n\n\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate:[AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate:[AuthGuard] },\n  { path: 'posts/create', component: CreatePostComponent, canActivate:[AuthGuard] },\n  { path: 'posts', component: PostsComponent },\n  { path: 'categories', component: CategoriesComponent },\n  { path: 'category/:id', component: PostsByCategoryComponent, pathMatch: 'full' },\n  { path: 'post/:id', component: PostComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    CreatePostComponent,\n    PostsComponent,\n    CategoriesComponent,\n    ManageCategoriesComponent,\n    PostsByCategoryComponent,\n    PostComponent,\n    ManagePostsComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    HttpModule,\n    FlashMessagesModule.forRoot(),\n    AngularFontAwesomeModule,\n    CKEditorModule\n  ],\n  providers: [\n    ValidateService,\n    AuthService,\n    AuthGuard, \n    PostService,\n    CategoryService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CanActivate } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n \r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n \r\n  constructor(private authService: AuthService, private router: Router) {}\r\n \r\n  canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  \n  constructor(private http: Http) { }\n\n  registerUser(user) {\n\t\tlet headers = new Headers();\n\t\theaders.append('Content-Type', 'application/json');\n\t\treturn this.http.post('users/register', user, {headers: headers})\n      //.map(res => res.json());\n      .pipe(map((res: any) => res.json()));\n  }\n  \n  authenticateUser(user){\n\t\tlet headers = new Headers();\n\t\theaders.append('Content-Type', 'application/json');\n\t\treturn this.http.post('users/authenticate', user,{headers: headers})\n      .pipe(map((res: any) => res.json()));\n  }\n\n  getProfile(){\n\t\tlet headers = new Headers();\n\t\tthis.loadToken();\n\t\theaders.append('Authorization', this.authToken);\n\t\theaders.append('Content-Type', 'application/json');\n\t\treturn this.http.get('users/profile', {headers: headers})\n    .pipe(map((res: any) => res.json()));\n\t}\t\n  \n\tstoreUserData(token, user){\n\t\tlocalStorage.setItem('id_token', token);\n\t\tlocalStorage.setItem('user', JSON.stringify(user));\n\t\tthis.authToken = token;\n\t\tthis.user = user;\n  }\n  \n  loadToken(){\n\t\tconst token = localStorage.getItem('id_token');\n\t\tthis.authToken = token;\n  }\n\n  loggedIn(){\n\treturn tokenNotExpired('id_token');\n\t}\n\t\n  logout(){\n  \tthis.authToken = null;\n   \tthis.user = null;\n  \tlocalStorage.clear();\n\t}\n\t\n\tgetUserById(_id: string){\n\t\treturn this.http.get('users/'+_id)\n\t\t\t.pipe(map((res: any) => res.json()));\n\t}\n}\n","module.exports = \".category-tag {\\r\\n  background: #f4f4f4 !important;\\r\\n  padding: 4px;\\r\\n  margin: 3px 0;\\r\\n  display: block;\\r\\n}\"","module.exports = \"<h2><strong>Categories</strong></h2>\\n<hr><br><br>\\n\\n<div *ngIf=\\\"categories\\\">\\n\\t\\t<div *ngFor=\\\"let category of categories\\\" class=\\\"list-group\\\">\\n\\t\\t\\t<div class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t<h3><a [routerLink]=\\\"['/category', category._id]\\\">{{category.category_name}}</a></h3>\\n\\t\\t\\t\\t\\t<small class=\\\"category-tag\\\">Created on: <em>{{category.created_at}}</em></small>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from '../../category.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  categories: any;\n\n\n  constructor(\n    private categoryService: CategoryService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.categoryService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  \n}\n\n\n\n\n\n\n","module.exports = \"/*\\r\\nthead {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\ntable {\\r\\n    width: 100%\\r\\n}\\r\\n*/\\r\\n\\r\\nbutton{\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\ntbody{\\r\\n    display: block;\\r\\n    overflow-y: auto; \\r\\n}\\r\\n\\r\\nthead, tbody tr{\\r\\n    display: table;\\r\\n    width: 100%;\\r\\n    table-layout: fixed;\\r\\n}\\r\\n\\r\\n.body{\\r\\n    padding-top:10px;\\r\\n    padding-left: 10px; \\r\\n}\\r\\n\\r\\n#category{\\r\\n    padding-top:20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n        <h3 class=\\\"text-center\\\">Manage Categories</h3>\\n    </div>\\n    <div class=\\\"body\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-5\\\" id=\\\"category\\\">\\n                <form #categoryForm=\\\"ngForm\\\" (ngSubmit)=\\\"onCategorySubmit(categoryForm)\\\">\\n                  <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"categoryService.selectedCategory._id\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Category Name: </label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"category_name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"categoryService.selectedCategory.category_name\\\" placeholder=\\\"enter category name to be created...\\\" required>\\n                  </div>\\n                  <br>\\n                  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!categoryForm.valid\\\">Submit</button>\\n                  <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"resetForm(categoryForm)\\\">Reset</button>\\n                </form>\\n            </div>\\n            <div class=\\\"col-md-7\\\" >\\n                <h4>Categories created by {{user.name}}:</h4>\\n                <br>\\n                <table class=\\\"table table-responsive table-hover table-bordered table-sm\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>Category Name</th>\\n                      <th>Manage</th>\\n                      <th>Created on</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                  <div *ngIf=\\\"categoryService.categories\\\">\\n                        <tr *ngFor=\\\"let category of categoryService.categories\\\"> \\n                          <td>{{category.category_name}}</td>\\n                          <td>\\n                            <a class=\\\"btn btn-info\\\" (click)=\\\"onUpdate(category)\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\n                            <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteCategory(category._id, categoryForm)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                          </td>\\n                          <td>{{category.created_at | slice:0:10}}</td>\\n                        </tr>\\n                  </div>\\n                </tbody>\\n                </table>\\n            </div>\\n          </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { CategoryService } from '../../category.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Categories } from '../../categories.model';\nimport { ValidateService } from '../../validate.service';\nimport { AuthService } from '../../auth.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-manage-categories',\n  templateUrl: './manage-categories.component.html',\n  styleUrls: ['./manage-categories.component.css'],\n  providers: [CategoryService]\n})\n\n\n\nexport class ManageCategoriesComponent implements OnInit {\n  user: any;\n\n  category: Categories;\n  categories: Categories[];\n\n  category_name: string;\n  user_id: string;\n\n  @ViewChild(\"name\", { read: ElementRef }) trgFocusEl : ElementRef;\n\n  constructor(\n    private categoryService: CategoryService,\n    private router: Router,\n    private flashMessage: FlashMessagesService,\n    private validateService: ValidateService,\n    private authService: AuthService\n  ) { }\n \n  ngOnInit() {\n    this.resetForm();\n    this.refreshCategoryList();\n  }\n\n  \n  resetForm(form?: NgForm) {\n    if (form)\n      form.reset();\n    this.categoryService.selectedCategory = {\n      _id: \"\",\n      category_name: \"\",\n      user_id: \"\"\n    }\n  }\n  \n refreshCategoryList(){\n  const userString = localStorage.getItem('user');\n  this.user = JSON.parse(userString);\n  this.categoryService.getCategoriesByUserId(this.user.id).subscribe((res) => {\n    this.categoryService.categories = res as Categories[];\n    //console.log(this.categoryService.categories);\n  },\n  err => {\n    console.log(err);\n    return false;\n  });\n }\n\n\n  onCategorySubmit(form: NgForm){\n    const category = {\n      _id: form.value._id,\n      category_name: form.value.category_name,\n      user_id: this.user.id\n    }\n\n    // Required fields\n    if(!this.validateService.validateCategory(category)){\n      this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      //console.log('Please fill in all fields');\n      return false;\n    }\n\n    if(form.value._id == \"\")\n    {\n      // save category\n      this.categoryService.createCategory(category).subscribe(data => {\n        if(data.success){\n          this.resetForm(form);\n          this.refreshCategoryList();\n          this.flashMessage.show('Category created successfully', {cssClass: 'alert-success', timeout: 3000});\n          this.router.navigate(['categories']);\n        } else {\n          this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n          this.router.navigate(['dashboard']);\n        }\n      });\n    } else {\n      // update category\n      this.categoryService.updateCategory(category).subscribe(data => {\n        if(data.success){\n          this.resetForm(form);\n          this.refreshCategoryList();\n          this.flashMessage.show('Category updated successfully', {cssClass: 'alert-success', timeout: 3000});\n          this.router.navigate(['categories']);\n        } else {\n          this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n          this.router.navigate(['dashboard']);\n        }\n      });   \n    }\n  }\n\n  onUpdate(category: Categories){\n    this.categoryService.selectedCategory = category;\n\n      setTimeout(()=>{\n       this.trgFocusEl.nativeElement.focus();\n     },100);\n  }\n\n  deleteCategory(_id: string, form: NgForm){\n\n    this.categoryService.deleteCategory(_id).subscribe(data => {\n      /*\n      if(data.n == 1){\n        for(var i = 0; i < categories.length; i++){\n          if(categories[i]._id == id){\n            categories.splice(i, 1);\n          }\n        }\n      }\n      */\n      if(data.success){\n        this.resetForm(form);\n        this.refreshCategoryList();\n        this.flashMessage.show('Category deleted successfully', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['dashboard']);\n      } else {\n        this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['dashboard']);\n      }\n    });\n  }\n\n  /*\n  updateCategory(cat){\n    //var categories = this.categories;\n    //var category = this.category;\n\n    this.categoryService.selectedCategory = cat;\n    console.log(cat);\n\n    \n    this.categoryService.getCategoryById(id).subscribe(cat => {\n      //category.category_name = cat.category_name;\n      this.category_name = cat.category_name;\n      //console.log(category);\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    \n  }\n  */\n\n}\n","module.exports = \".post-tag {\\r\\n    background: #f4f4f4 !important;\\r\\n    padding: 4px;\\r\\n    margin: 3px 0;\\r\\n    display: block;\\r\\n  }\"","module.exports = \"<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/categories']\\\"><i class=\\\"fa fa-arrow-left\\\"></i>  Go back</a>\\n<br><br><br>\\n\\n<h2><strong>Category: {{category.category_name}}</strong></h2>\\n<hr><br><br>\\n\\n<div *ngIf=\\\"posts\\\">\\n\\t\\t<div *ngFor=\\\"let post of posts\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t<h3><u>{{post.title}}</u></h3>\\n\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3 col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p></p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-9 col-sm-9\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<small class=\\\"post-tag\\\">Created on: <em>{{post.created_at}}</em></small>\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <p>{{(post.body | slice:0:6)+'...'}}</p> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"(post.body | slice:0:300)+'...' \\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/post', post._id]\\\">Read More</a>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<br><br>\\n\\t\\t</div>\\n</div>\\n\\n<div *ngIf=\\\"!posts\\\">\\n\\t<p>No posts to display</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\nimport { CategoryService } from '../../category.service';\nimport { PostService } from '../../post.service';\nimport { AuthService } from '../../auth.service';\n\nimport { Categories } from '../../categories.model';\n\n@Component({\n  selector: 'app-posts-by-category',\n  templateUrl: './posts-by-category.component.html',\n  styleUrls: ['./posts-by-category.component.css']\n})\nexport class PostsByCategoryComponent implements OnInit {\n  category: Categories;\n  posts: any;\n  user: any;\n\n  cat_id: string;\n  user_id: string;\n\n  constructor(\n    private categoryService: CategoryService,\n    private postService: PostService,\n    private authService: AuthService,\n    route: ActivatedRoute\n  ) {\n    this.cat_id = route.snapshot.params['id'];\n   }\n\n  ngOnInit() {\n    this.getCategoryInfo(this.cat_id);\n    this.onPostsByCategory(this.cat_id);\n    \n  }\n\n  getCategoryInfo(_id: string){\n    this.categoryService.getCategoryById(_id).subscribe(category => {\n      this.category = category;\n      //this.user_id = this.category.user_id;\n     // console.log(category);\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n\n  onPostsByCategory(_id: string){\n    this.postService.getPostsByCategory(_id).subscribe(posts => {\n      this.posts = posts;\n      //console.log(posts);\n    },\n    err => {\n      console.log(err);\n      return false; \n    });\n  }\n\n  getCategoryUserInfo(_id: string){\n    this.user_id = this.category.user_id;\n    //console.log(this.user_id);\n    /*\n    this.authService.getUserById(_id).subscribe(user => {\n      this.user = user;\n      console.log(user);\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    */\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\nimport { Categories } from './categories.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  //authToken: any;\n  category: any;\n\n  selectedCategory: Categories;\n  categories: Categories[];\n\n  constructor(\n    private http: Http,\n    private authService: AuthService\n  ) { }\n\n  createCategory(category: Categories) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('categories/create', category, {headers: headers})\n      .pipe(map((res: any) => res.json()));\n  }\n\n  getCategories(){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('categories/', {headers: headers})\n      .pipe(map((res: any) => res.json()));\n  }\n\n  getCategoryById(id){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('categories/'+id, {headers: headers})\n      .pipe(map((res: any) => res.json()));\n  }\n\n  updateCategory(category: Categories) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.put('categories/' + `/${category._id}`, category, {headers: headers})\n      .pipe(map((res: any) => res.json()));\n  }\n\n  deleteCategory(_id: string){\n    return this.http.delete('categories/'+_id)\n      .pipe(map((res: any) => res.json()));\n  }\n\n  getCategoriesByUserId(_id: string){\n    return this.http.get('categories/user/'+_id)\n      .pipe(map((res: any) => res.json()));\n  }\n\n\n}\n\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header text-center\\\">Dashboard</h2>\\n<br><br>\\n\\n<app-manage-categories></app-manage-categories>\\n<br><br>\\n\\n<app-manage-posts></app-manage-posts>\\n\\n\\t\\t\\n\\t\\n\\t\\n\"","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  user: any;\n\n  constructor( ) { }\n\n  ngOnInit() {\n    const userString = localStorage.getItem('user');\n    this.user = JSON.parse(userString);\n  }\n\n}\n","module.exports = \".btn{\\r\\n    margin-right: 5px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"jumbotron text-center\\\">\\n\\t\\t<h4>Welcome to the blog!</h4>\\n\\t\\t<p class=\\\"lead\\\"><a [routerLink]=\\\"['/posts']\\\">View latest posts</a></p>\\n\\t\\t<hr>\\n\\t\\t<p class=\\\"lead\\\">Login to create a new post or Register if not already a member.</p>\\n\\t\\t<div>\\n\\t\\t\\t<a class=\\\"btn btn-info\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n\\t\\t\\t<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n\\t\\t</div>\\n</div>\\n\\n<div *ngIf=\\\"authService.loggedIn()\\\" class=\\\"jumbotron text-center\\\">\\n\\t<h4>Welcome to the blog!</h4>\\n\\t<p class=\\\"lead\\\"><a [routerLink]=\\\"['/posts']\\\">View latest posts</a></p>\\n\\t<hr>\\n\\t<p class=\\\"lead\\\">View latest posts or create a new post.</p>\\n\\t<div>\\n\\t\\t<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/posts']\\\">Blog</a>\\n\\t\\t<a class=\\\"btn btn-info\\\" [routerLink]=\\\"['/posts/create']\\\">Create post</a>\\n\\t</div>\\n</div>\\n\\n<br>\\n<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-4\\\">\\n\\t\\t\\t<h3>Express Backend</h3>\\n\\t\\t\\t<p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-4\\\">\\n\\t\\t\\t<h3>Angular-CLI</h3>\\n\\t\\t\\t<p>Angular-CLI to generate components, services and more. Local dev server and easy compilation </p>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-4\\\">\\n\\t\\t\\t<h3>JWT Tokens</h3>\\n\\t\\t\\t<p>Full featured authentication using JSON web tokens. Login and store user data</p>\\n\\t\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4 offset-md-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h2 class=\\\"page-header text-center\\\">Login</h2>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <form (submit)=\\\"onLoginSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Username</label>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label>Password</label>\\n                  <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n                </div>\\n                <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Login\\\">\\n              </form>\\n        </div>\\n      </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n\tpassword: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n\t\tprivate flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n\t\tconst user = {\n\t\t\tusername: this.username,\n\t\t\tpassword: this.password\n\t\t}\n\t\t\n\t\tthis.authService.authenticateUser(user).subscribe(data => {\n\t\t\tif(data.success){\n\t\t\t\tthis.authService.storeUserData(data.token, data.user);\n\t\t\t\tthis.flashMessage.show('You are now logged in', {cssClass: 'alert-success', timeout: 5000});\n\t\t\t\tthis.router.navigate(['dashboard']);\n\t\t\t} else {\n\t\t\t\tthis.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 5000});\n\t\t\t\tthis.router.navigate(['login']);\n\t\t\t}\n\t\t});\n\t}\n\n}\n","module.exports = \"/*\\r\\nnav{\\r\\n    font-size: 1.5em !important;\\r\\n} \\r\\n*/\\r\\n\\r\\n.nav-item a{\\r\\n    font-size: 1em !important;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">voltraaBlog</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/posts']\\\"><i class=\\\"fa fa-newspaper-o\\\" aria-hidden=\\\"true\\\"></i><strong> Blog</strong></a>\\n        </li>\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/categories']\\\">Categories</a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['/posts/create']\\\">Create post</a>\\n          </li>\\n          <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n          </li>\\n\\t\\t      <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n          </li>\\n          <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n          </li>\\n          <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n          </li>\\n          <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a>\\n          </li>\\n      </ul>\\n    </div>\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n\t\tprivate router: Router,\n\t\tprivate flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n\t\tthis.authService.logout();\n\t\tthis.flashMessage.show('You are logged out', {cssClass: 'alert-success', timeout: 3000});\n\t\tthis.router.navigate(['/login']);\n\t\treturn false;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\nimport { Post } from './post.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  //authToken: any;\n  post: any;\n\n  selectedPost: Post;\n  posts: Post[];\n\n  constructor(\n    private http: Http,\n    private authService: AuthService\n  ) { }\n\n  createPost(post) {\n\t\tlet headers = new Headers();\n\t\theaders.append('Content-Type', 'application/json');\n\t\treturn this.http.post('posts/create', post, {headers: headers})\n      //.map(res => res.json());\n      .pipe(map((res: any) => res.json()));\n  }\n\n  getPosts(){\n\t\tlet headers = new Headers();\n\t\t//this.authService.loadToken();\n\t\t//headers.append('Authorization', this.authToken);\n\t\theaders.append('Content-Type', 'application/json');\n\t\treturn this.http.get('posts/', {headers: headers})\n    .pipe(map((res: any) => res.json()));\n  }\t\n\n  getPost(_id: string){\n\t\treturn this.http.get('posts/'+_id)\n    .pipe(map((res: any) => res.json()));\n  }\t\n  \n  getPostsByCategory(_id: string){\n    return this.http.get('posts/category/'+_id)\n      .pipe(map((res: any) => res.json()));\n  }\n\n  getPostsByUserId(_id: string){\n    return this.http.get('posts/user/'+_id)\n      .pipe(map((res: any) => res.json()));\n  }\n\n  updatePost(post: Post) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.put('posts' + `/${post._id}`, post, {headers: headers})\n      .pipe(map((res: any) => res.json()));\n  }\n\n  deletePost(_id: string){\n    return this.http.delete('posts/'+_id)\n      .pipe(map((res: any) => res.json()));\n  }\n\n  \n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header text-center\\\">Create post</h2>\\n<br>\\n<form (submit)=\\\"onPostSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Title</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"enter post title...\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Body</label>\\n    <ck-editor name=\\\"body\\\" [(ngModel)]=\\\"body\\\" skin=\\\"moono-lisa\\\" language=\\\"en\\\" [fullPage]=\\\"false\\\" placeholder=\\\"enter post body...\\\"></ck-editor>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Category</label>\\n    <select class=\\\"form-control\\\" id=\\\"category_id\\\" [(ngModel)]=\\\"category_id\\\" name=\\\"category_id\\\">\\n      <option *ngFor=\\\"let category of this.categories\\\" value=\\\"{{category._id}}\\\">{{category.category_name}}</option>\\n    </select>\\n  </div>\\n  <br>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n</form>\\n\\n\\n<!--\\n  <textarea [(ngModel)]=\\\"body\\\" name=\\\"body\\\" class=\\\"form-control\\\"></textarea>\\n-->\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../../auth.service';\nimport { Router } from '@angular/router';\nimport { PostService } from '../../post.service';\nimport { CategoryService } from '../../category.service';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css']\n})\nexport class CreatePostComponent implements OnInit {\n  user: Object;\n  categories: any;\n\n  title: String;\n  body: String;\n  user_id: String;\n  category_id: String;\n\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router,\n    private postService: PostService,\n    private categoryService: CategoryService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n      this.user_id = profile.user._id;\n\t\t},\n\t\terr => {\n\t\t\tconsole.log(err);\n\t\t\treturn false;\n    });\n    \n    this.getCategories();\n  }\n\n  onPostSubmit(){\n    const post = {\n      title: this.title,\n      body: this.body,\n      user_id: this.user_id,\n      category_id: this.category_id\n    }\n    console.log(post);\n    // Required fields\n    if(!this.validateService.validatePost(post)){\n      this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      //console.log('Please fill in all fields');\n      return false;\n    }\n\n    // create post\n    this.postService.createPost(post).subscribe(data => {\n      if(data.success){\n        this.flashMessage.show('Post created successfully', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/posts']);\n      } else {\n        this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/create']);\n      }\n    });\n\n  }\n\n  // get categories\n  getCategories(){\n    this.categoryService.getCategories().subscribe(catgs => {\n      this.categories =  catgs;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n}\n\n\n\n\n","module.exports = \"button{\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\ntbody{\\r\\n    display: block;\\r\\n    overflow-y: auto; \\r\\n}\\r\\n\\r\\nthead, tbody tr{\\r\\n    display: table;\\r\\n    width: 100%;\\r\\n    table-layout: fixed;\\r\\n}\\r\\n\\r\\n/*\\r\\nthead{\\r\\n    width: calc(100% - 1em);\\r\\n}\\r\\n*/\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <h4 class=\\\"text-center\\\">Manage Posts</h4>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n          <form #postForm=\\\"ngForm\\\" (ngSubmit)=\\\"onPostSubmit(postForm)\\\">\\n              <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"postService.selectedPost._id\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Title: </label>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"title\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"postService.selectedPost.title\\\" placeholder=\\\"enter post title...\\\" required>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Body: </label>\\n                <ck-editor name=\\\"body\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"postService.selectedPost.body\\\" skin=\\\"moono-lisa\\\" language=\\\"en\\\" [fullPage]=\\\"false\\\" placeholder=\\\"enter post body...\\\" required></ck-editor>\\n                <!--\\n                <textarea class=\\\"form-control\\\" name=\\\"body\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"postService.selectedPost.body\\\" placeholder=\\\"enter post body...\\\" required></textarea>\\n                -->  \\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>Category: </label>\\n                  <select class=\\\"form-control\\\" id=\\\"category_id\\\" name=\\\"category_id\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"postService.selectedPost.category_id\\\" required> \\n                      <option *ngFor=\\\"let category of this.categories\\\" value=\\\"{{category._id}}\\\">{{category.category_name}}</option>\\n                  </select>\\n                </div>\\n              <br>\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!postForm.valid\\\">Submit</button>\\n              <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"resetForm(postForm)\\\">Reset</button>\\n          </form>\\n          <hr><br><br>\\n\\n          <h5>Posts created by {{user.name}}:</h5>\\n          <br>\\n          <table class=\\\"table table-responsive table-hover table-bordered table-sm\\\">\\n            <!---->\\n            <thead>\\n              <tr>\\n                <th>Post Name</th>\\n                <th>Manage</th>\\n                <th>Created on</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n            <div *ngIf=\\\"postService.posts\\\">\\n                  <tr *ngFor=\\\"let post of postService.posts\\\"> \\n                    <td>{{post.title}}</td>\\n                    <td>\\n                      <a class=\\\"btn btn-info\\\" (click)=\\\"onUpdate(post)\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></a>\\n                      <a class=\\\"btn btn-danger\\\" (click)=\\\"deletePost(post._id, postForm)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                    </td>\\n                    <td>{{post.created_at | slice:0:10}}</td>\\n                  </tr>\\n            </div>\\n          </tbody>\\n          </table>\\n          <br><br>\\n\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { NgForm } from '@angular/forms';\n\nimport { PostService } from '../../post.service';\nimport { ValidateService } from '../../validate.service';\nimport { AuthService } from '../../auth.service';\nimport { CategoryService } from '../../category.service';\n\nimport { Post } from '../../post.model';\n\n\n@Component({\n  selector: 'app-manage-posts',\n  templateUrl: './manage-posts.component.html',\n  styleUrls: ['./manage-posts.component.css'],\n  providers: [ PostService, CategoryService ]\n})\n\nexport class ManagePostsComponent implements OnInit {\n  user: any;\n  categories: any;\n\n  post: Post;\n  posts: Post[];\n\n  //category_name: string;\n  user_id: string;\n\n  @ViewChild(\"name\", { read: ElementRef }) trgFocusEl : ElementRef;\n\n  constructor(\n    private router: Router,\n    private flashMessage: FlashMessagesService,\n    private postService: PostService,\n    private categoryService: CategoryService,\n    private validateService: ValidateService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.getCategories();\n    this.resetForm();\n    this.refreshPostList();\n  }\n\n\n  resetForm(form?: NgForm) {\n    if(form){\n      form.reset();\n    }\n      \n    this.postService.selectedPost = {\n      _id: \"\",\n      title: \"\",\n      body: \"\",\n      category_id: \"\",\n      user_id: \"\"\n    }\n  }\n  \n  refreshPostList(){\n    const userString = localStorage.getItem('user');\n    this.user = JSON.parse(userString);\n    this.postService.getPostsByUserId(this.user.id).subscribe((res) => {\n      this.postService.posts = res as Post[];\n      //console.log(this.postService.posts);\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  // get categories\n  getCategories(){\n    this.categoryService.getCategories().subscribe(catgs => {\n      this.categories =  catgs;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  onPostSubmit(form: NgForm){\n    const post = {\n      _id: form.value._id,\n      title: form.value.title,\n      body: form.value.body,\n      category_id: form.value.category_id,\n      user_id: this.user.id\n    }\n\n    // Required fields\n    if(!this.validateService.validatePost(post)){\n      this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      //console.log('Please fill in all fields');\n      return false;\n    }\n\n    if(form.value._id == \"\")\n    {\n      // save category\n      this.postService.createPost(post).subscribe(data => {\n        if(data.success){\n          this.resetForm(form);\n          this.refreshPostList();\n          this.flashMessage.show('Post created successfully', {cssClass: 'alert-success', timeout: 3000});\n          this.router.navigate(['posts']);\n        } else {\n          this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n          this.router.navigate(['dashboard']);\n        }\n      });\n    } else {\n      // update category\n      this.postService.updatePost(post).subscribe(data => {\n        if(data.success){\n          this.resetForm(form);\n          this.refreshPostList();\n          this.flashMessage.show('Post updated successfully', {cssClass: 'alert-success', timeout: 3000});\n          this.router.navigate(['posts']);\n        } else {\n          this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n          this.router.navigate(['dashboard']);\n        }\n      });   \n    }\n  }\n\n  onUpdate(post: Post){\n    this.postService.selectedPost = post;\n\n      setTimeout(()=>{\n       this.trgFocusEl.nativeElement.focus();\n     },100);\n  }\n\n  deletePost(_id: string, form: NgForm){\n    this.postService.deletePost(_id).subscribe(data => {\n      if(data.success){\n        this.resetForm(form);\n        this.refreshPostList();\n        this.flashMessage.show('Post deleted successfully', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['dashboard']);\n      } else {\n        this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['dashboard']);\n      }\n    });\n  }\n\n}\n","module.exports = \".post-tag {\\r\\n    background: #f4f4f4 !important;\\r\\n    padding: 4px;\\r\\n    margin: 3px 0;\\r\\n    display: block;\\r\\n  }\\r\\n\\r\\n  /*\\r\\n  @font-face{\\r\\n    font-family: newscycle;\\r\\n    src: url('../../../assets/font/NewsCycle-Regular.ttf');\\r\\n  }\\r\\n  \\r\\n  body{\\r\\n      font-family: newscycle !important;\\r\\n      font-size: 1em;\\r\\n  }\\r\\n  */\"","module.exports = \"\\n<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/posts']\\\"><i class=\\\"fa fa-arrow-left\\\"></i>  Go back</a>\\n<br><br><br>\\n\\n<div *ngIf=\\\"post\\\">\\n\\t\\n\\t<div class=\\\"card\\\">\\n\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t<h2 class=\\\"text-center\\\"><strong><u>{{post.title}}</u></strong></h2>\\n\\t\\t\\t<br>\\n\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"text-justify\\\" [innerHTML]=\\\"post.body\\\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<br><br>\\n\\n\\t\\t\\t<small class=\\\"post-tag\\\">Created on: <em>{{post.created_at}}</em></small>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\t\\n</div>\\n\\n\\n<!--\\n\\t\\t<div class=\\\"list-group-item\\\">\\n          <p>{{post.body}}</p>\\n\\t\\t\\t\\t\\t<small class=\\\"post-tag\\\">Created on: <em>{{post.created_at}}</em></small>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t</div>\\n\\n-->\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\nimport { PostService } from '../../post.service';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  post_id: string;\n\n  post: any;\n  user: any;\n\n  constructor(\n    private postService: PostService,\n    private authService: AuthService,\n    route: ActivatedRoute\n  ) {\n      this.post_id = route.snapshot.params['id'];\n    }\n\n  ngOnInit() {\n    this.getPost(this.post_id);\n  }\n\n  getPost(_id: string){\n    this.postService.getPost(_id).subscribe(post => {\n      this.post = post;\n      //console.log(post);\n    },\n    err => {\n      console.log(err);\n      return false; \n    });\n  }\n\n}\n","module.exports = \".post-tag {\\r\\n    background: #f4f4f4 !important;\\r\\n    padding: 4px;\\r\\n    margin: 3px 0;\\r\\n    display: block;\\r\\n  }\"","module.exports = \"<h2><strong>Latest posts</strong></h2>\\n<hr><br><br>\\n\\n<div *ngIf=\\\"posts\\\">\\n\\t\\t<div *ngFor=\\\"let post of posts\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t<h3><u>{{post.title}}</u></h3>\\n\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-3 col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p></p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-9 col-sm-9\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<small class=\\\"post-tag\\\">Created on: <em>{{post.created_at}}</em></small>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [innerHTML]=\\\"(post.body | slice:0:300)+'...' \\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/post', post._id]\\\">Read More</a>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<br><br>\\n\\t\\t</div>\\n</div>\\n\\n\\n\\n<!--\\n<div class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t<h3><a [routerLink]=\\\"['/post', post._id]\\\">{{post.title}}</a></h3>\\n\\t\\t\\t\\t\\t<p>{{(post.body | slice:0:6)+'...'}}</p>\\n\\t\\t\\t\\t\\t<div [innerHTML]=\\\"post.body\\\"></div>\\n\\t\\t\\t\\t\\t<small class=\\\"post-tag\\\">Created on: <em>{{post.created_at}}</em></small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<br><br>\\n-->\\n\\n\\n\\n\\n<!--\\n\\n<div *ngIf=\\\"posts\\\">\\n\\n\\t\\t\\n\\t\\t<ul *ngFor=\\\"let post of posts\\\" class=\\\"list-group\\\">\\n      <h2 class=\\\"page-header\\\">{{post.title}}</h2>\\n\\t\\t\\t<li class=\\\"list-group-item\\\">{{post.body}}</li>\\n\\t\\t\\t<li class=\\\"list-group-item\\\">category: {{post.category_id}}</li>\\n\\t\\t</ul>\\n\\n\\n\\n</div>\\n\\n-->\"","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../../post.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n  posts: any;\n\n  constructor(\n    private postService: PostService,\n\t\tprivate router: Router,\n\t\tprivate flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.postService.getPosts().subscribe(posts => {\n      this.posts = posts;\n\t\t},\n\t\terr => {\n\t\t\tconsole.log(err);\n\t\t\treturn false;\n\t\t});\n  }\n  \n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n\\t<div class=\\\"card\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<h2 class=\\\"page-header text-center\\\">User profile</h2>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t<ul class=\\\"list-group\\\">\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\">Name: {{user.name}}</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(\n    private authService: AuthService,\n\t\tprivate router: Router,\n\t\tprivate flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n\t\t},\n\t\terr => {\n\t\t\tconsole.log(err);\n\t\t\treturn false;\n\t\t});\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row \\\">\\n    <div class=\\\"col-md-4 offset-md-4\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <h2 class=\\\"page-header text-center\\\">Register</h2>    \\n            </div>\\n            <div class=\\\"card-body\\\">\\n                    <form (submit)=\\\"onRegisterSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label>Name</label>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label>Username</label>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label>Email</label>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label>Password</label>\\n                                <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n                            </div>\\n                            <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Submit\\\">\\n                       </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n\t  private validateService: ValidateService, \n\t  private flashMessage: FlashMessagesService,\n      private authService: AuthService,\n      private router: Router\n\t) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n\tconst user = {\n\t\tname: this.name,\n\t\temail: this.email,\n\t\tusername: this.username,\n\t\tpassword: this.password\n\t}\n\t\n\t// Required fields\n\tif(!this.validateService.validateRegister(user)){\n\t\tthis.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n\t\t//console.log('Please fill in all fields');\n\t\treturn false;\n\t}\n\t// validate email\n\tif(!this.validateService.validateEmail(user.email)){\n\t\tthis.flashMessage.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\n\t\t//console.log('Please use a valid email');\n\t\treturn false;\n\t}\n\n\t// Register user\n\tthis.authService.registerUser(user).subscribe(data => {\n\t\tif(data.success){\n\t\t\tthis.flashMessage.show('You are now registered and can log in', {cssClass: 'alert-success', timeout: 3000});\n\t\t\tthis.router.navigate(['/login']);\n\t\t} else {\n\t\t\tthis.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n\t\t\tthis.router.navigate(['/register']);\n\t\t}\n\t});\n }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n\t\tif(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tvalidateEmail(email){\n\t\tconst re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\t\treturn re.test(email);\n\t}\n\n\tvalidatePost(post){\n\t\tif(post.title == undefined || post.body == undefined || post.category_id == undefined){\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tvalidateCategory(category){\n\t\tif(category.category_name == undefined){\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}